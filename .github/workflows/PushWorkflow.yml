name: Tests and Validation

run-name: "${{github.actor}}: ${{ github.event.head_commit.message }}"

on:
  push:

jobs:

  Determine-Jobs-To-Run:
    name: Determine Jobs to Run
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docs: ${{ steps.filter.outputs.docs }}
      non-unity: ${{ steps.filter.outputs.non-unity }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Filters
        uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            code:
              - '**.cpp'
              - '**.h'
              - '**.hlsli'
              - '**.hlsl'
              - '**/CMakeLists.txt'
              - '**.cmake'
              - '**/RWBuildAndRunTests.yml'
              - '**/PushWorkflow.yml'
              - '**CMakePresets.json'
            docs:
              - '**.md'
              - '**/RWLinkValidation.yml'
              - '**/PushWorkflow.yml'
            non-unity:
              - '**/CMakeLists.txt'
              - '**/RWNonUnityBuild.yml'
              - '**/PushWorkflow.yml' 

  If-Code-Changes:
    
    needs: Determine-Jobs-To-Run
    if: ${{ needs.Determine-Jobs-To-Run.outputs.code == 'true' }}

    name: Code Change Checks
    permissions:
        checks: write
        pull-requests: write

    uses: ./.github/workflows/RWBuildAndRunTests.yml

  If-Docs-Change:

    needs: Determine-Jobs-To-Run
    if: ${{ needs.Determine-Jobs-To-Run.outputs.docs == 'true' }}

    name: Docs Change Checks
    uses: ./.github/workflows/RWLinkValidation.yml

  If-Non-Unity-Change:

    needs: Determine-Jobs-To-Run
    if: ${{ needs.Determine-Jobs-To-Run.outputs.non-unity == 'true' }}

    name: Non Unity build checks
    uses: ./.github/workflows/RWNonUnityBuild.yml
   

  Push-Checks:
    needs: [If-Code-Changes, If-Docs-Change, If-Non-Unity-Change]

    if: always()
    name: Push Checks
    runs-on: ubuntu-latest
    steps:
      - name: Check Dependent Jobs
        uses: lwhiteley/dependent-jobs-result-check@main
        id: statuses
        with:
            statuses: failure,cancelled
            dependencies: ${{ toJSON(needs) }}

      - name: Evaluate
        if: fromJSON(steps.statuses.outputs.found)
        run: exit 1

          
            
